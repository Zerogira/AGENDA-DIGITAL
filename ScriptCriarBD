create database agendaeletronica;
use agendaeletronica;

CREATE TABLE usuarios (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(255) NOT NULL,
    usuario VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    cpf VARCHAR(14) NOT NULL,
    telefone VARCHAR(24) NOT NULL,
    endereco VARCHAR(255) NOT NULL,
    cep VARCHAR(10) NOT NULL,
    cidade VARCHAR(255) NOT NULL,
    eAdmin BOOLEAN NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE funcionarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    cpf VARCHAR(14) NOT NULL,
    telefone VARCHAR(15) NOT NULL,
    endereco VARCHAR(255) NOT NULL,
    cep VARCHAR(9) NOT NULL,
    cidade VARCHAR(255) NOT NULL,
    disponibilidade VARCHAR(255) NOT NULL,
    status VARCHAR(255) NOT NULL,
    usuarioID INT NOT NULL,
    FOREIGN KEY (usuarioID) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE brinquedos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(255) NOT NULL,
    descricao VARCHAR(255) NOT NULL,
    marca VARCHAR(255) NOT NULL,
    quantidade INT NOT NULL,
    statusB VARCHAR(255) NOT NULL,
    necessFuncionario BOOLEAN NOT NULL,
    usuarioID INT NOT NULL,
    FOREIGN KEY (usuarioID) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE eventos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(255) NOT NULL,
    horarioInicio TIME NOT NULL,
    horarioFim TIME NOT NULL,
    tipo ENUM('PARTICULAR', 'PREFEITURA', 'PARTICULAR FORA DA CIDADE', 'PREFEITURA FORA DA CIDADE') NOT NULL,
    endereco VARCHAR(255),
    cidade VARCHAR(255),
    dataInicio DATE NOT NULL,
    dataFim DATE NOT NULL,
    status VARCHAR(255),
    observacao TEXT,
    contato VARCHAR (255) NOT NULL,
    usuarioID INT NOT NULL,
    FOREIGN KEY (usuarioID) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE disponibilidadebrinquedos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    brinquedoID INT NOT NULL,
    dataInicio DATE NOT NULL,
    dataFim DATE NOT NULL,
    horarioInicio TIME NOT NULL,
    horarioFim TIME NOT NULL,
    quantidade JSON,
    statusB VARCHAR(200) NOT NULL,
    minimoFuncionario INT NOT NULL,
    eventoID INT,
    usuarioID INT NOT NULL,
    FOREIGN KEY (usuarioID) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (eventoID) REFERENCES eventos(id) ON DELETE CASCADE ON UPDATE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE disponibilidadeFuncionarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    funcionarioID INT NOT NULL,
    dataInicio DATE NOT NULL,
    dataFim DATE NOT NULL,
    horarioInicio TIME NOT NULL,
    horarioFim TIME NOT NULL,
    statusF VARCHAR(200) NOT NULL,
    usuarioID INT,
    FOREIGN KEY (usuarioID) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    eventoID INT,
    FOREIGN KEY (eventoID) REFERENCES eventos(id) ON DELETE CASCADE ON UPDATE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Avisos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    titulo VARCHAR(255) NOT NULL,
    descricao TEXT NOT NULL,
    dataRegistro DATE NOT NULL,
    dataPrazo DATE NOT NULL,
    statusA VARCHAR(50) NOT NULL,
    usuarioID INT NOT NULL,
    FOREIGN KEY (usuarioID) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
